/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "alpha.*"
    {
        isoFaceTol      1e-10;
        surfCellTol     1e-6;
        nAlphaBounds    3;
        snapTol         1e-12;
        clip            true;
//	interpolateNormal true;

        nAlphaSubCycles 3;
        cAlpha          1;
        advectionScheme isoAdvection;
        reconstructionScheme plicRDF; // isoAlpha; // plicRDF
    }

    alpha1_cr
    {
        isoFaceTol	1e-10;
        surfCellTol     1e-6;
        nAlphaBounds    3;
        snapTol         1e-12;
        clip            true;
        interpolateNormal true; // true: new alpha old U; false: old alpha old U

        iterations	15;
        nAlphaSubCycles 3;
        cAlpha          1;
        reconstructionScheme plicRDF; // isoAlpha; // plicRDF
    }


    "pcorr.*"
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-8;
        relTol          0;
    }

    p_rgh
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-07;
        relTol          0.05;
    }

    p_rghFinal
    {
        $p_rgh;
        tolerance       1e-09;
        relTol          0;
    }

    U
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-08;
        relTol          0;
    }

    rho
    {
        solver diagonal;
        nAlphaBounds    3;
        snapTol         1e-12;
        clip            false; // true;
    }

    rhoFinal
    {
        $rho;
    }
}

PIMPLE
{
    momentumPredictor no;
    nOuterCorrectors  3;
    nCorrectors      3;
    nNonOrthogonalCorrectors 0;
    pRefCell        0;
    pRefValue       0;
}

// ************************************************************************* //
