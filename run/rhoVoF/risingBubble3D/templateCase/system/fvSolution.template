/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "alpha.*"
    {
        advectionScheme isoAdvection;
        reconstructionScheme plicRDF;

        // isoAdvector parameters
        isoFaceTol      1e-6;
        surfCellTol     1e-6;
        nAlphaBounds    3;
        snapTol         1e-12;
        clip            true;
        gradAlphaNormal false;
        writeVTK        false;

        // MULES parameters
        nAlphaCorr      2;
        cAlpha          1;
        icAlpha         0;
        MULESCorr       yes;
        nLimiterIter    3;
        alphaApplyPrevCorr yes;
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;
        relTol          0;
        minIter         1;

        // parameters read by both isoAdvector and MULES
        nAlphaSubCycles 1;
    }

    pcorr
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-10;
        relTol          0;
    }

    pcorrFinal
    {
        $pcorr;
    }

    rho
    {
        solver          diagonal;
        tolerance       1e-07;
        relTol          0;
    }

    rhoFinal
    {
        solver diagonal;
    }

    mu
    {
       solver          diagonal;
       tolerance       1e-07;
       relTol          0;
     }

    p_rgh
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       @!p_tol!@;
        relTol          0;
        minIter         10;
    }

    p_rghFinal
    {
        $p_rgh;
    }

    U
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       @!u_tol!@;
        relTol          0;
        minIter         5;
    }

    UFinal
    {
        $U; 
    }
}

PIMPLE
{
    momentumPredictor   no; //yes;
    nOuterCorrectors    @!n_outer_correctors!@;
    nCorrectors         @!n_correctors!@; 
    nNonOrthogonalCorrectors @!n_non_orth_correctors!@;
    pRefCell            0;
    pRefValue           0;
}

relaxationFactors
{
    fields
    {
    }
    equations
    {
        ".*" 1;
    }
}


// ************************************************************************* //
